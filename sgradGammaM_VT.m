function sgrad_gm_vt = sgradGammaM_VT(res, b_max, c_f, c_m, v, mu, ...
    beta_ff, beta_fm, beta_mf, beta_mm, gamma_f, gamma_m, alpha_f, alpha_m)
% A script to evaluate the selection gradient for gamma_m in the model
% with vertical transmission; res is a four-element vector containing the 
% endemic equilibrium values of S_f, S_m, I_f, and I_m (in that order).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% evaluate the selection gradient
sgrad_gm_vt = (-(res(3) * (-c_m * ((-beta_mf * res(3) - beta_mm * res(4) - mu - alpha_m - gamma_m) * res(1) + res(3) * (v * alpha_m - beta_mf * res(3) - beta_mm * res(4) - mu - alpha_m - gamma_m)) * alpha_f + (-c_f * gamma_f - c_m * gamma_m + b_max) * (-res(3) - res(1)) * alpha_f + mu * c_m * (beta_mf * res(3) + beta_mm * res(4) + mu + alpha_m + gamma_m) * res(1) - mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * res(1) + c_m * res(3) ^ 2 * mu * beta_mf + res(4) * c_m * res(3) * mu * beta_mm + (-v * alpha_m * c_m * res(3) + c_m * res(3) * (mu + alpha_m + gamma_m) - (-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) - (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * beta_ff) + ((c_m * ((-beta_mf * res(3) - beta_mm * res(4) - mu - alpha_m - gamma_m) * res(1) + res(3) * (v * alpha_m - beta_mf * res(3) - beta_mm * res(4) - mu - alpha_m - gamma_m)) * res(4) * beta_fm - (-c_f * gamma_f - c_m * gamma_m + b_max) * (-res(3) - res(1)) * res(4) * beta_fm - mu * c_m * (beta_mf * res(3) + beta_mm * res(4) + mu + alpha_m + gamma_m) * res(1) + mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * res(1) - c_m * res(3) ^ 2 * mu * beta_mf - res(4) * c_m * res(3) * mu * beta_mm - (-v * alpha_m * c_m * res(3) + c_m * res(3) * (mu + alpha_m + gamma_m) - (-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) - (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * alpha_f) - (res(4) * (mu * c_m * (beta_mf * res(3) + beta_mm * res(4) + mu + alpha_m + gamma_m) * res(1) - mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * res(1) + c_m * res(3) ^ 2 * mu * beta_mf + res(4) * c_m * res(3) * mu * beta_mm + (-v * alpha_m * c_m * res(3) + c_m * res(3) * (mu + alpha_m + gamma_m) - (-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) - (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * beta_fm) - (mu * c_m * (mu + gamma_f) * (beta_mf * res(3) + beta_mm * res(4) + mu + alpha_m + gamma_m) * res(1)) + (mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * (mu + gamma_f) * res(1)) - (c_m * res(3) ^ 2 * mu * (mu + gamma_f) * beta_mf) - (res(4) * c_m * res(3) * mu * (mu + gamma_f) * beta_mm) + (((c_m * mu * res(3) + c_m * gamma_f * res(3)) * alpha_m + mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * (res(2) + res(4))) * mu * v) - (c_m * res(3) * (mu + gamma_f) * mu * alpha_m) + (((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu * gamma_f) - ((mu + gamma_m) * c_m * res(3) * mu * gamma_f) - (mu ^ 2 * c_m * (mu + gamma_m) * res(3)) + (mu ^ 2 * (-c_f * gamma_f - c_m * gamma_m + b_max) * res(3)) + (mu ^ 2 * (-c_f * gamma_f - c_m * gamma_m + b_max) * (res(2) + res(4))) + (0.2e1 * (((-1 + v) ^ 2 * mu ^ 2) - (2 * (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * (-1 + v) * mu) + (beta_fm ^ 2 * res(4) ^ 2) - 0.4e1 * (-(beta_ff * res(3)) / 0.2e1 + (v - 0.1e1 / 0.2e1) * alpha_f - gamma_f / 0.2e1) * beta_fm * res(4) + (beta_ff ^ 2 * res(3) ^ 2) - 0.4e1 * beta_ff * ((v - 0.1e1 / 0.2e1) * alpha_f - gamma_f / 0.2e1) * res(3) + ((alpha_f + gamma_f) ^ 2)) * (mu ^ 2 + (beta_mf * res(3) + beta_mm * res(4) + alpha_m + gamma_m) * mu + alpha_m * (beta_mf * res(3) + beta_mm * res(4))) * ((res(2) + res(4)) ^ 2) * ((-c_f * gamma_f - c_m * gamma_m + b_max) ^ 2) * mu + 0.2e1 * c_m * (((res(1) + res(3)) * (-1 + v) * mu ^ 2) + ((((-1 + v) * beta_mm - beta_fm) * (res(1) + res(3)) * res(4) + ((-1 + v) * beta_mf - beta_ff) * res(3) ^ 2 + ((v ^ 2 - 1) * alpha_m + (2 * v - 1) * alpha_f + ((-1 + v) * beta_mf - beta_ff) * res(1) - gamma_f + (-1 + v) * gamma_m) * res(3) + ((-1 + v) * alpha_m - alpha_f - gamma_f + (-1 + v) * gamma_m) * res(1)) * mu) - (beta_fm * beta_mm * (res(1) + res(3)) * res(4) ^ 2) + (((-beta_ff * beta_mm - beta_fm * beta_mf) * res(3) ^ 2) + ((beta_fm * (-1 + v) * alpha_m + beta_mm * (2 * v - 1) * alpha_f + (-beta_ff * beta_mm - beta_fm * beta_mf) * res(1) - beta_fm * gamma_m - beta_mm * gamma_f) * res(3)) + 0.2e1 * res(1) * ((v - 0.1e1 / 0.2e1) * beta_fm * alpha_m - (alpha_f * beta_mm) / 0.2e1 - (beta_fm * gamma_m) / 0.2e1 - (beta_mm * gamma_f) / 0.2e1)) * res(4) - (beta_ff * beta_mf * res(3) ^ 3) + ((beta_ff * (-1 + v) * alpha_m + beta_mf * (2 * v - 1) * alpha_f - beta_ff * beta_mf * res(1) - beta_ff * gamma_m - beta_mf * gamma_f) * res(3) ^ 2) + (((alpha_f * (-1 + v) + res(1) * (2 * v - 1) * beta_ff - gamma_f * (v + 1)) * alpha_m + (-res(1) * beta_mf + gamma_m * (2 * v - 1)) * alpha_f + (-beta_ff * gamma_m - beta_mf * gamma_f) * res(1) - gamma_m * gamma_f) * res(3)) - (res(1) * (alpha_m + gamma_m) * (alpha_f + gamma_f))) * (mu ^ 2 + (beta_mf * res(3) + beta_mm * res(4) + alpha_m + gamma_m) * mu + alpha_m * (beta_mf * res(3) + beta_mm * res(4))) * (res(2) + res(4)) * (mu ^ 2 + (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * mu + alpha_f * (beta_ff * res(3) + beta_fm * res(4))) * (-c_f * gamma_f - c_m * gamma_m + b_max) - (2 * (-c_f * gamma_f - c_m * gamma_m + b_max) ^ 2 * (((-1 + v) * res(3) + (-1 + v) * res(1)) * mu + (-beta_fm * res(3) - beta_fm * res(1)) * res(4) - beta_ff * res(3) ^ 2 + ((2 * v - 1) * alpha_f - beta_ff * res(1) - gamma_f) * res(3) - res(1) * (alpha_f + gamma_f)) * (mu ^ 2 + (beta_mf * res(3) + beta_mm * res(4) + alpha_m + gamma_m) * mu + alpha_m * (beta_mf * res(3) + beta_mm * res(4))) * (res(2) + res(4)) * (mu ^ 2 + (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * mu + alpha_f * (beta_ff * res(3) + beta_fm * res(4)))) - 0.2e1 * ((-c_f * gamma_f - c_m * gamma_m + b_max) ^ 2) * (((res(1) + res(3)) * (-1 + v) * mu ^ 2) + ((((-1 + v) * beta_mm - beta_fm) * (res(1) + res(3)) * res(4) + ((-1 + v) * beta_mf - beta_ff) * res(3) ^ 2 + ((v ^ 2 - 1) * alpha_m + (2 * v - 1) * alpha_f + ((-1 + v) * beta_mf - beta_ff) * res(1) - gamma_f + (-1 + v) * gamma_m) * res(3) + ((-1 + v) * alpha_m - alpha_f - gamma_f + (-1 + v) * gamma_m) * res(1)) * mu) - (beta_fm * beta_mm * (res(1) + res(3)) * res(4) ^ 2) + (((-beta_ff * beta_mm - beta_fm * beta_mf) * res(3) ^ 2) + ((beta_fm * (-1 + v) * alpha_m + beta_mm * (2 * v - 1) * alpha_f + (-beta_ff * beta_mm - beta_fm * beta_mf) * res(1) - beta_fm * gamma_m - beta_mm * gamma_f) * res(3)) + 0.2e1 * res(1) * ((v - 0.1e1 / 0.2e1) * beta_fm * alpha_m - (alpha_f * beta_mm) / 0.2e1 - (beta_fm * gamma_m) / 0.2e1 - (beta_mm * gamma_f) / 0.2e1)) * res(4) - (beta_ff * beta_mf * res(3) ^ 3) + ((beta_ff * (-1 + v) * alpha_m + beta_mf * (2 * v - 1) * alpha_f - beta_ff * beta_mf * res(1) - beta_ff * gamma_m - beta_mf * gamma_f) * res(3) ^ 2) + (((alpha_f * (-1 + v) + res(1) * (2 * v - 1) * beta_ff - gamma_f * (v + 1)) * alpha_m + (-res(1) * beta_mf + gamma_m * (2 * v - 1)) * alpha_f + (-beta_ff * gamma_m - beta_mf * gamma_f) * res(1) - gamma_m * gamma_f) * res(3)) - (res(1) * (alpha_m + gamma_m) * (alpha_f + gamma_f))) * mu * (res(2) + res(4)) * (mu ^ 2 + (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * mu + alpha_f * (beta_ff * res(3) + beta_fm * res(4))) - (2 * (-c_f * gamma_f - c_m * gamma_m + b_max) * ((-res(3) - res(1)) * mu - beta_mm * (res(1) + res(3)) * res(4) - beta_mf * res(3) ^ 2 + ((-1 + v) * alpha_m - res(1) * beta_mf - gamma_m) * res(3) - res(1) * (alpha_m + gamma_m)) ^ 2 * (mu ^ 2 + (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * mu + alpha_f * (beta_ff * res(3) + beta_fm * res(4))) ^ 2 * c_m) + (2 * (-c_f * gamma_f - c_m * gamma_m + b_max) ^ 2 * ((-res(3) - res(1)) * mu - beta_mm * (res(1) + res(3)) * res(4) - beta_mf * res(3) ^ 2 + ((-1 + v) * alpha_m - res(1) * beta_mf - gamma_m) * res(3) - res(1) * (alpha_m + gamma_m)) * (mu ^ 2 + (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * mu + alpha_f * (beta_ff * res(3) + beta_fm * res(4))) ^ 2 * (-res(3) - res(1)))) * ((((-1 + v) ^ 2 * mu ^ 2) - (2 * (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * (-1 + v) * mu) + (beta_fm ^ 2 * res(4) ^ 2) - 0.4e1 * (-(beta_ff * res(3)) / 0.2e1 + (v - 0.1e1 / 0.2e1) * alpha_f - gamma_f / 0.2e1) * beta_fm * res(4) + (beta_ff ^ 2 * res(3) ^ 2) - 0.4e1 * beta_ff * ((v - 0.1e1 / 0.2e1) * alpha_f - gamma_f / 0.2e1) * res(3) + ((alpha_f + gamma_f) ^ 2)) * ((mu ^ 2 + (beta_mf * res(3) + beta_mm * res(4) + alpha_m + gamma_m) * mu + alpha_m * (beta_mf * res(3) + beta_mm * res(4))) ^ 2) * ((res(2) + res(4)) ^ 2) * ((-c_f * gamma_f - c_m * gamma_m + b_max) ^ 2) - 0.2e1 * ((-c_f * gamma_f - c_m * gamma_m + b_max) ^ 2) * (((res(1) + res(3)) * (-1 + v) * mu ^ 2) + ((((-1 + v) * beta_mm - beta_fm) * (res(1) + res(3)) * res(4) + ((-1 + v) * beta_mf - beta_ff) * res(3) ^ 2 + ((v ^ 2 - 1) * alpha_m + (2 * v - 1) * alpha_f + ((-1 + v) * beta_mf - beta_ff) * res(1) - gamma_f + (-1 + v) * gamma_m) * res(3) + ((-1 + v) * alpha_m - alpha_f - gamma_f + (-1 + v) * gamma_m) * res(1)) * mu) - (beta_fm * beta_mm * (res(1) + res(3)) * res(4) ^ 2) + (((-beta_ff * beta_mm - beta_fm * beta_mf) * res(3) ^ 2) + ((beta_fm * (-1 + v) * alpha_m + beta_mm * (2 * v - 1) * alpha_f + (-beta_ff * beta_mm - beta_fm * beta_mf) * res(1) - beta_fm * gamma_m - beta_mm * gamma_f) * res(3)) + 0.2e1 * res(1) * ((v - 0.1e1 / 0.2e1) * beta_fm * alpha_m - (alpha_f * beta_mm) / 0.2e1 - (beta_fm * gamma_m) / 0.2e1 - (beta_mm * gamma_f) / 0.2e1)) * res(4) - (beta_ff * beta_mf * res(3) ^ 3) + ((beta_ff * (-1 + v) * alpha_m + beta_mf * (2 * v - 1) * alpha_f - beta_ff * beta_mf * res(1) - beta_ff * gamma_m - beta_mf * gamma_f) * res(3) ^ 2) + (((alpha_f * (-1 + v) + res(1) * (2 * v - 1) * beta_ff - gamma_f * (v + 1)) * alpha_m + (-res(1) * beta_mf + gamma_m * (2 * v - 1)) * alpha_f + (-beta_ff * gamma_m - beta_mf * gamma_f) * res(1) - gamma_m * gamma_f) * res(3)) - (res(1) * (alpha_m + gamma_m) * (alpha_f + gamma_f))) * (mu ^ 2 + (beta_mf * res(3) + beta_mm * res(4) + alpha_m + gamma_m) * mu + alpha_m * (beta_mf * res(3) + beta_mm * res(4))) * (res(2) + res(4)) * (mu ^ 2 + (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * mu + alpha_f * (beta_ff * res(3) + beta_fm * res(4))) + ((-c_f * gamma_f - c_m * gamma_m + b_max) ^ 2 * ((-res(3) - res(1)) * mu - beta_mm * (res(1) + res(3)) * res(4) - beta_mf * res(3) ^ 2 + ((-1 + v) * alpha_m - res(1) * beta_mf - gamma_m) * res(3) - res(1) * (alpha_m + gamma_m)) ^ 2 * (mu ^ 2 + (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * mu + alpha_f * (beta_ff * res(3) + beta_fm * res(4))) ^ 2)) ^ (-0.1e1 / 0.2e1) / 0.2e1) / (beta_mf * (mu + alpha_m) * res(3) + beta_mm * (mu + alpha_m) * res(4) + mu * (mu + alpha_m + gamma_m)) / (res(1) + res(3) + res(2) + res(4)) / (res(3) * (mu + alpha_f) * beta_ff + (beta_fm * res(4) + mu) * alpha_f + mu * (beta_fm * res(4) + mu + gamma_f)) / 0.4e1 - (-(res(3) * ((-c_f * gamma_f - c_m * gamma_m + b_max) * ((-beta_mf * res(3) - beta_mm * res(4) - mu - alpha_m - gamma_m) * res(1) + res(3) * (v * alpha_m - beta_mf * res(3) - beta_mm * res(4) - mu - alpha_m - gamma_m)) * alpha_f - mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * (beta_mf * res(3) + beta_mm * res(4) + mu + alpha_m + gamma_m) * res(1) - ((res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max) * alpha_m + ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * res(3) * beta_mf - res(4) * ((res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max) * alpha_m + ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * beta_mm + (v * alpha_m * (-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) - ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * (mu + alpha_m + gamma_m)) * mu) * beta_ff) + ((-(-c_f * gamma_f - c_m * gamma_m + b_max) * ((-beta_mf * res(3) - beta_mm * res(4) - mu - alpha_m - gamma_m) * res(1) + res(3) * (v * alpha_m - beta_mf * res(3) - beta_mm * res(4) - mu - alpha_m - gamma_m)) * res(4) * beta_fm + mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * (beta_mf * res(3) + beta_mm * res(4) + mu + alpha_m + gamma_m) * res(1) + ((res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max) * alpha_m + ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * res(3) * beta_mf + res(4) * ((res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max) * alpha_m + ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * beta_mm - (v * alpha_m * (-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) - ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * (mu + alpha_m + gamma_m)) * mu) * alpha_f) - (res(4) * (-mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * (beta_mf * res(3) + beta_mm * res(4) + mu + alpha_m + gamma_m) * res(1) - ((res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max) * alpha_m + ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * res(3) * beta_mf - res(4) * ((res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max) * alpha_m + ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * beta_mm + (v * alpha_m * (-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) - ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * (mu + alpha_m + gamma_m)) * mu) * beta_fm) + (mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * (mu + gamma_f) * (beta_mf * res(3) + beta_mm * res(4) + mu + alpha_m + gamma_m) * res(1)) + ((mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * (mu + alpha_m) * (res(2) + res(4)) * v + ((res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max) * alpha_m + ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * (mu + gamma_f)) * res(3) * beta_mf) + (res(4) * (mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * (mu + alpha_m) * (res(2) + res(4)) * v + ((res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max) * alpha_m + ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * (mu + gamma_f)) * beta_mm) + (((-(-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) * gamma_f + (-(-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu) * alpha_m + mu * (-c_f * gamma_f - c_m * gamma_m + b_max) * (mu + gamma_m) * (res(2) + res(4))) * mu * v) + (((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * (mu + gamma_f) * mu * alpha_m) + ((mu + gamma_m) * ((-c_f * gamma_f - c_m * gamma_m + b_max) * res(3) + (res(2) + res(4)) * (-c_f * gamma_f - c_m * gamma_m + b_max)) * mu * gamma_f) + (mu ^ 2 * (-c_f * gamma_f - c_m * gamma_m + b_max) * (mu + gamma_m) * res(3)) + (mu ^ 2 * (-c_f * gamma_f - c_m * gamma_m + b_max) * (res(2) + res(4)) * gamma_m) + (mu ^ 3 * (-c_f * gamma_f - c_m * gamma_m + b_max) * res(2)) + (mu ^ 3 * (-c_f * gamma_f - c_m * gamma_m + b_max) * res(4)) + sqrt((((-1 + v) ^ 2 * mu ^ 2) - (2 * (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * (-1 + v) * mu) + (beta_fm ^ 2 * res(4) ^ 2) - 0.4e1 * (-(beta_ff * res(3)) / 0.2e1 + (v - 0.1e1 / 0.2e1) * alpha_f - gamma_f / 0.2e1) * beta_fm * res(4) + (beta_ff ^ 2 * res(3) ^ 2) - 0.4e1 * beta_ff * ((v - 0.1e1 / 0.2e1) * alpha_f - gamma_f / 0.2e1) * res(3) + ((alpha_f + gamma_f) ^ 2)) * ((mu ^ 2 + (beta_mf * res(3) + beta_mm * res(4) + alpha_m + gamma_m) * mu + alpha_m * (beta_mf * res(3) + beta_mm * res(4))) ^ 2) * ((res(2) + res(4)) ^ 2) * ((-c_f * gamma_f - c_m * gamma_m + b_max) ^ 2) - 0.2e1 * ((-c_f * gamma_f - c_m * gamma_m + b_max) ^ 2) * (((res(1) + res(3)) * (-1 + v) * mu ^ 2) + ((((-1 + v) * beta_mm - beta_fm) * (res(1) + res(3)) * res(4) + ((-1 + v) * beta_mf - beta_ff) * res(3) ^ 2 + ((v ^ 2 - 1) * alpha_m + (2 * v - 1) * alpha_f + ((-1 + v) * beta_mf - beta_ff) * res(1) - gamma_f + (-1 + v) * gamma_m) * res(3) + ((-1 + v) * alpha_m - alpha_f - gamma_f + (-1 + v) * gamma_m) * res(1)) * mu) - (beta_fm * beta_mm * (res(1) + res(3)) * res(4) ^ 2) + (((-beta_ff * beta_mm - beta_fm * beta_mf) * res(3) ^ 2) + ((beta_fm * (-1 + v) * alpha_m + beta_mm * (2 * v - 1) * alpha_f + (-beta_ff * beta_mm - beta_fm * beta_mf) * res(1) - beta_fm * gamma_m - beta_mm * gamma_f) * res(3)) + 0.2e1 * res(1) * ((v - 0.1e1 / 0.2e1) * beta_fm * alpha_m - (alpha_f * beta_mm) / 0.2e1 - (beta_fm * gamma_m) / 0.2e1 - (beta_mm * gamma_f) / 0.2e1)) * res(4) - (beta_ff * beta_mf * res(3) ^ 3) + ((beta_ff * (-1 + v) * alpha_m + beta_mf * (2 * v - 1) * alpha_f - beta_ff * beta_mf * res(1) - beta_ff * gamma_m - beta_mf * gamma_f) * res(3) ^ 2) + (((alpha_f * (-1 + v) + res(1) * (2 * v - 1) * beta_ff - gamma_f * (v + 1)) * alpha_m + (-res(1) * beta_mf + gamma_m * (2 * v - 1)) * alpha_f + (-beta_ff * gamma_m - beta_mf * gamma_f) * res(1) - gamma_m * gamma_f) * res(3)) - (res(1) * (alpha_m + gamma_m) * (alpha_f + gamma_f))) * (mu ^ 2 + (beta_mf * res(3) + beta_mm * res(4) + alpha_m + gamma_m) * mu + alpha_m * (beta_mf * res(3) + beta_mm * res(4))) * (res(2) + res(4)) * (mu ^ 2 + (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * mu + alpha_f * (beta_ff * res(3) + beta_fm * res(4))) + ((-c_f * gamma_f - c_m * gamma_m + b_max) ^ 2 * ((-res(3) - res(1)) * mu - beta_mm * (res(1) + res(3)) * res(4) - beta_mf * res(3) ^ 2 + ((-1 + v) * alpha_m - res(1) * beta_mf - gamma_m) * res(3) - res(1) * (alpha_m + gamma_m)) ^ 2 * (mu ^ 2 + (beta_ff * res(3) + beta_fm * res(4) + alpha_f + gamma_f) * mu + alpha_f * (beta_ff * res(3) + beta_fm * res(4))) ^ 2))) * mu / ((beta_mf * (mu + alpha_m) * res(3) + beta_mm * (mu + alpha_m) * res(4) + mu * (mu + alpha_m + gamma_m)) ^ 2) / (res(1) + res(3) + res(2) + res(4)) / (res(3) * (mu + alpha_f) * beta_ff + (beta_fm * res(4) + mu) * alpha_f + mu * (beta_fm * res(4) + mu + gamma_f)) / 0.4e1;